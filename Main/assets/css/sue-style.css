/* globals */
* {
	box-sizing: border-box;
} 
html {
	font-size: 62.5%;
}
body {
	padding: 1rem;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';	
	font-size: 1.75rem;
	line-height: 1.5;	
}

/* tags */
p, h1, h4 {
	font-family: 'Roboto Slab', serif;
}

/* classes for jumbotron*/
.jumbotron {
	background-color: #428bca
}
.jumbotron h1 {
	color:white;
}
.jumbotron ul {
	color: white;
	text-align: center;
}
.jumbotron ul li {
	display: inline-block;
}
.jumbotron a:link {
	color: midnightblue;
}
.jumbotron a:visited {
	color:darkslategray
}
.jumbotron a:hover {
	color:black;
}
.jumbotron a:active {
	color: blue;
} 

/* classes for cards */
main {
	width: 96%;
	margin: 2rem auto;
}

.row {
	/* create our main grid with flexbox, use negative margins to offset the padding on the .card-column class */	
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	margin-left: -1.5rem;
	margin-right: -1.5rem;
}

.justify-center {
	justify-content: center;
}

.card-column {
	/* using a mobile-first approach, set base column width to be 100% and we'll update it using media queries for larger screen sizes */	
	flex: 1 0 100%;
	padding: 1.5rem;
	/* when the screen resizes, make it so our columns don't jump in size */
	transition: flex-basis 500ms linear;
	margin-bottom: 1.5rem;
}

.code-card {
	/* make each card a flexbox column to align and justify content within it */	
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	min-height: 100%;
	padding: 2rem;
	/* outline is like border, but on the outside of the box instead of inside */
	outline: 2px solid black;
	outline-offset: -2px;
	transition: all 0.5s ease-in-out;
}

.code-card .card-header {
	/* use position and negative margins to move title of card over the card's outline and create an overlap effect */
	position: relative;
	margin: -1rem 0 1.5rem 0;
	padding: 0.5rem 1rem;
	border: 2px solid var(--gin);
	border-radius: 8px;
	transition: all 0.5s ease-in-out;
}

.code-card .code-block {
  /* each card's code block grows to the height of the largest code block on the page, making each card even in height  */	
  flex-grow: 1;
}

.card {
	max-width: 600px;
	background-color: white;
	color:black;
	padding: 1rem;
	display: inline-block;
}
.card:hover {
	transform: scale(1.03) !important;
}
.card h4 {
	margin: 0;
	background-color: #000;
	color: white;
	padding: .6254rem .875rem; 
	opacity: 1;
}
.card a {
	display: block;
}
.card img {
	object-fit: cover;
	display: block;
	height: 100%;
	width: 100%;
	margin: 0;
} 

/* -----if statements----- */

/* using a mobile-first approach, use `min-width` values going from narrow -> wide for a responsive design */
@media screen and (min-width: 768px) {
	/* on tablets, set columns to only be 50% of the width and not grow */
	.card-column { 
		flex: 0 0 50%;
		max-width: 50%;
	}

	/* select the last child to grow to full width if it has space to grow */
	.card-column:last-child {
		flex-grow: 1;
	}
}

  /* media query for larger screens */
@media screen and (min-width: 992px) {
	header { width: 75%; }
	.card-column {
		flex: 0 0 25.0%;
		max-width: 25.0%;
	}
}
